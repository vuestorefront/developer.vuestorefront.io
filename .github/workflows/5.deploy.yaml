name: Deploy to Vue Storefront Cloud

on: [ push ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Build the Docker Image
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: developer-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.vuestorefront.cloud
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/Dockerfile
          buildoptions: --compress
          buildargs: ALGOLIA_TOKEN,ALGOLIA_ID,GITHUB_TOKEN,DEV_TO_TOKEN,GOOGLE_TAG_ID
        env:
          ALGOLIA_TOKEN: ${{ secrets.ALGOLIA_TOKEN }}
          ALGOLIA_ID: ${{ secrets.ALGOLIA_ID }}
          GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
          DEV_TO_TOKEN: ${{ secrets.BUILD_DEV_TO_TOKEN }}
          GOOGLE_TAG_ID: ${{ secrets.GOOGLE_TAG_ID }}

      - name: "Slack Notification - Fail"
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "VSF-Bot"
          SLACK_ICON: https://user-images.githubusercontent.com/1626923/182921494-7d6d0fd1-d83a-4b34-9fcc-1285b165c8a0.png
          SLACK_TITLE: "Error when building the docker image"
          SLACK_FOOTER: "Vue Storefront - GitHub Slack Bot"
          SLACK_MESSAGE: "There was an error in the docker image building process for the Developer Portal: ${{env.ENVIRONMENT}}"
          SLACK_COLOR: ${{ job.status }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      deployments: write

    steps:
      # Start deployment status
      - name: Create GitHub deployment
        uses: bloodf/github-deploy-action@v1
        id: deployment
        with:
          environment-url: ${{env.DEPLOY_URL}}
          environment: ${{env.ENVIRONMENT}}

      - name: In-progress Status
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'in_progress'

      - name: "Slack Notification - Starting"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "VSF-Bot"
          SLACK_ICON: https://user-images.githubusercontent.com/1626923/182921494-7d6d0fd1-d83a-4b34-9fcc-1285b165c8a0.png
          SLACK_TITLE: "Developer Portal - Deployment [Starting]"
          SLACK_FOOTER: "Vue Storefront - GitHub Slack Bot"
          SLACK_MESSAGE: "Starting the deployment of the Developer Portal: ${{env.ENVIRONMENT}}"
          SLACK_COLOR: ${{ job.status }}

      # Deploying image to VSF Cloud
      - name: "Deploy ${{env.ENVIRONMENT}}"
        shell: bash
        run: |
          echo 'Deploying to: ${{ secrets.DEPLOY_URL }}'
          OUTPUT=$(curl -s -H 'X-User-Id: ${{ secrets.CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X PATCH -d '{"front_version":"${{ github.sha }}"}' '${{ secrets.DEPLOY_URL }}')
          if echo $OUTPUT | grep -q '"code":200,'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process... Response: $OUTPUT"
            exit 1
          fi

      # If deployment was successful
      - name: Success Status
        if: success()
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'
          description: 'Successful deployment to ${{env.ENVIRONMENT}}'

      - name: "Slack Notification - Success"
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "VSF-Bot"
          SLACK_ICON: https://user-images.githubusercontent.com/1626923/182921494-7d6d0fd1-d83a-4b34-9fcc-1285b165c8a0.png
          SLACK_TITLE: "Developer Portal - Deployment [Success]"
          SLACK_FOOTER: "Vue Storefront - GitHub Slack Bot"
          SLACK_MESSAGE: "The new version of the portal is live at ${{ secrets.DEPLOY_URL }}"
          SLACK_COLOR: ${{ job.status }}
          MSG_MINIMAL: true

      # If deployment had any errors
      - name: Failure Status
        if: failure()
        uses: bloodf/github-deploy-status@v1
        with:
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'error'
          description: 'There was an error when deploying to the environment: ${{env.ENVIRONMENT}}'

      - name: "Slack Notification - Fail"
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "VSF-Bot"
          SLACK_ICON: https://user-images.githubusercontent.com/1626923/182921494-7d6d0fd1-d83a-4b34-9fcc-1285b165c8a0.png
          SLACK_TITLE: "Developer Portal - Deployment [Error]"
          SLACK_FOOTER: "Vue Storefront - GitHub Slack Bot"
          SLACK_MESSAGE: "There was an error when deploying the developer portal in the environment: ${{env.ENVIRONMENT}}"
          SLACK_COLOR: ${{ job.status }}

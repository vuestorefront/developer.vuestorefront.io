name: Deploy to Vue Storefront Cloud

on:
  deployment

permissions:
  contents: read
  deployments: write

jobs:
  initial:
    runs-on: ubuntu-latest
    steps:
      # Start deployment status
      - name: In-progress Status
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          target_url: https://developer-beta.europe-west1.gcp.storefrontcloud.io
          state: 'in_progress'
          deployment-id: ${{env.DEPLOY_ID}}

      - name: "Slack Notification - Starting"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "Deploy Bot"
          SLACK_TITLE: "Deployment of Developer Portal"
          SLACK_FOOTER: ""
          SLACK_MESSAGE: "Starting the deployment of the Developer Portal"
          SLACK_COLOR: ${{ job.status }}

  build:
    runs-on: ubuntu-latest
    needs: initial
    steps:
      # Checkout the Repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Build the Docker Image
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: developer-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.vuestorefront.cloud
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/Dockerfile
          buildoptions: --compress
          buildargs: ALGOLIA_TOKEN,ALGOLIA_ID,GITHUB_TOKEN,DEV_TO_TOKEN,GOOGLE_TAG_ID
        env:
          ALGOLIA_TOKEN: ${{ secrets.ALGOLIA_TOKEN }}
          ALGOLIA_ID: ${{ secrets.ALGOLIA_ID }}
          GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
          DEV_TO_TOKEN: ${{ secrets.BUILD_DEV_TO_TOKEN }}
          GOOGLE_TAG_ID: ${{ secrets.GOOGLE_TAG_ID }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploying image to VSF Cloud
      - name: "Deploy ${{env.ENVIRONMENT}}"
        shell: bash
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh

      # If deployment was successful
      - name: Success Status
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          target_url: https://developer-beta.europe-west1.gcp.storefrontcloud.io
          description: 'Successful deployment to ${{env.ENVIRONMENT}}'
          state: 'success'
          deployment-id: ${{env.DEPLOY_ID}}

      - name: "Slack Notification - Sucess"
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "Deploy Bot"
          SLACK_TITLE: "Successful deployment"
          SLACK_FOOTER: ""
          SLACK_MESSAGE: "The new version of the portal is live at ${{ secrets.DEPLOY_URL }}"
          SLACK_COLOR: ${{ job.status }}
          MSG_MINIMAL: true

      # If deployment had any errors
      - name: Failure Status
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          target_url: https://developer-beta.europe-west1.gcp.storefrontcloud.io
          description: 'There was an error when deploying to the environment: ${{env.ENVIRONMENT}}'
          state: 'failure'
          deployment-id: ${{env.DEPLOY_ID}}

      - name: "Slack Notification - Fail"
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: "Deploy Bot"
          SLACK_TITLE: "Error when deploying the developer portal"
          SLACK_FOOTER: ""
          SLACK_MESSAGE: "There was an error when deploying the developer portal in the environment: ${{env.ENVIRONMENT}}"
          SLACK_COLOR: ${{ job.status }}
